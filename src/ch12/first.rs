// 借用和生命周期

// 生命周期
// 一个变量的生命周期就是它从创建到销毁的整个过程。
pub fn first() {
    let v = vec![1, 2, 3, 4, 5]; // v 的生命周期开始
    {
        let center = v[2]; // center 的生命周期开始
        println!("{}", center);
    } // center 的生命周期结束
    println!("{:?}", v);
} // v 的生命周期结束
// 如果一个变量永远只能有唯一一个入口可以访问的话，那就太难使用了。
// 因此，所有权还可以借用。

// 借用
